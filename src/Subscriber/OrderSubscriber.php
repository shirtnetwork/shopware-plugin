<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-01-22 15:01:47              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace Aggrosoft\Shopware\ShirtnetworkPlugin\Subscriber; use Aggrosoft\Shopware\ShirtnetworkPlugin\Core\Shirtnetwork\ApiClient; use Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent; use Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemEntity; use Shopware\Core\Checkout\Order\OrderEntity; use Shopware\Core\Checkout\Order\OrderEvents; use Shopware\Core\Framework\DataAbstractionLayer\EntityRepository; use Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenEvent; use Shopware\Core\Framework\DataAbstractionLayer\Search\Criteria; use Symfony\Component\EventDispatcher\EventSubscriberInterface; class OrderSubscriber implements EventSubscriberInterface { private $apiClient; private $orderRepository; public function __construct(ApiClient $hLJXW, EntityRepository $OYqrT) { $this->apiClient = $hLJXW; $this->orderRepository = $OYqrT; } public static function getSubscribedEvents() : array { return [CheckoutOrderPlacedEvent::class => "\x6f\156\117\x72\x64\145\x72\x50\154\x61\x63\145\x64"]; } public function onOrderPlaced(CheckoutOrderPlacedEvent $aofsh) { goto y3MYF; eNnVV: throw new \Exception("\123\110\x49\x52\x54\x4e\105\x54\x57\117\x52\113\x5f\103\x41\116\116\x4f\124\137\117\x52\x44\x45\122"); goto Kaq2g; j0daK: if (trim($zxKDf) != '' && trim($zxKDf) != "\x4f\x4b") { goto CSVl6; } goto whp62; RV3iV: $zxKDf = $this->apiClient->bookCoins($uDaY4->getSalesChannelId(), $FcfRs, $uDaY4->getOrderNumber(), 0, $npI54); goto j0daK; w7n1l: goto x4jnG; goto tgLEv; Djbx3: foreach ($WK_fL as $kyhVA) { goto S160W; iO_b5: G_5je: goto xTNL1; kuull: $u7c6v = $kyhVA->getPrice(); goto pkL4k; pkL4k: if ($u7c6v->getUnitPrice() >= 10) { goto LviaX; } goto dJcad; tK05b: $FcfRs += $u7c6v->getQuantity(); goto Lx11x; zsqiT: vX_LD: goto iO_b5; a1h2c: goto UcZlP; goto Z_Rt2; S160W: $cD8pR = $kyhVA->getPayload(); goto sX_TM; dJcad: $npI54 = $u7c6v->getUnitPrice() / 10 * $u7c6v->getQuantity(); goto a1h2c; Lx11x: UcZlP: goto zsqiT; sX_TM: if (!isset($cD8pR["\x73\150\151\162\x74\x6e\x65\x74\x77\157\x72\x6b"])) { goto vX_LD; } goto kuull; Z_Rt2: LviaX: goto tK05b; xTNL1: } goto xMYza; tgLEv: CSVl6: goto FuFAg; m8qVo: $WK_fL = $uDaY4->getLineItems(); goto uQdUN; whp62: $this->apiClient->manifestOrder($uDaY4->getSalesChannelId(), $uDaY4); goto w7n1l; y9Oc0: $npI54 = 0; goto Djbx3; Zer5c: if (!($FcfRs > 0 || $npI54 > 0)) { goto gPZA8; } goto RV3iV; Kaq2g: x4jnG: goto T32U0; T32U0: gPZA8: goto M25Jz; FuFAg: $this->orderRepository->delete([["\x69\x64" => $uDaY4->getId()]]); goto eNnVV; xMYza: z_E01: goto Zer5c; uQdUN: $FcfRs = 0; goto y9Oc0; y3MYF: $uDaY4 = $aofsh->getOrder(); goto m8qVo; M25Jz: } }